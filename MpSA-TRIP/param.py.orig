# A10-16
# indexList = ["AGTCGCCG", "TAAACATC", "ACAATTCG", "TACTTGTC", "GTACCGTT", "GCCACATA", "CCTATGGT"]

# A17-19
indexList = {"a0":"AACGTCGC", "a1":"AGGCAGCA", "a2":"AGCTTTCT"}

indexError = 0
barcodeError = 2
barcodeLength = 18
# barcodeLength = 20
mutationLength = 8
readsValue = 2
mutationProbability = 0.95
separator = " "
probability = 0.5

# Path to Rscript
rscript = '/usr/bin/Rscript'

# Path to paired_sequence_match.py
psmPy = '/usr/local/bin/paired_sequence_match.py'

# BC21-mut21, BC15-mut15
# const_1, const_2, const_3 = "GACACTCGAGGATCGAG", "GAGTTGTGGCCGGCCCTTGTGACTGGGAAAACCCTGGCGTAAATAAAATACGAAATGACTAGTcatgcgtc", "gcatgattatctttaacgtacgtcACAAT"
# const_1Error, const_2Error, const_3Error = 2, 5, 3

# Lib deltaC, wt
# const_1, const_2, const_3 = "CGCCAGGGTTTTCCCAGTCACAAGGGCCGGCCACAACTC", "CTCGATCCTCGAGTGTCACCTAAATCGTATGCGGCCGCGAATTCTTACTTGTACAGCTCGTCCATGCCGAGAGTGATCCCGGCG", ""
# const_1Error, const_2Error, const_3Error = 3, 5, 0

# Lib cDNA 29-36 A17-19
const_1, const_2, const_3 = "CGCCAGGGTTTTCCCAGTCACAAGGGCCGGCCACAACTC", "CTCGATCCTCGAGTGTCACCTAAATCGTATGCGGCCGCGAATTCTTACTTGTACAGCTCGTCCATGCCGAGAGTGATCCCGGCGGC", ""
const_1Error, const_2Error, const_3Error = 3, 5, 0

# Lib cDNA 41-48 A10-16
# const_1, const_2, const_3 = "CGCCAGGGTTTTCCCAGTCACAAGGGCCGGCCACAACTC", "CTCGATCCTCGAGTGTCACCTAAATCGTATGCGGCCGCGAATTCTTACTTGTACAGCTCGTCCATGCCGAGAGTGATCCCGGCGGC", ""
# const_1Error, const_2Error, const_3Error = 3, 5, 0

# Normal regular expression variables
regExpIndex = {x:"^({}){{s<={}}}({}){{s<={}}}".format(x, str(indexError), const_1.upper(), str(const_1Error)) for x in indexList.values()}
regExpBcMut = "^(?P<barcode>.*)({}){{s<={}}}(?P<mutation>.*)({}){{s<={}}}.*$".format(const_2.upper(), str(const_2Error), const_3.upper(), str(const_3Error))
regExpBc = "^(?P<barcode>.*)({}){{s<={}}}".format(const_2.upper(), str(const_2Error))